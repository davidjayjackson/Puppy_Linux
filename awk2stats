#!/usr/bin/gawk -f

function print_help() {
    print "Usage: awk2stats [CSV file] [column number]"
    print "Calculates descriptive statistics for a single column in a CSV file."
    print "  -h, --help   show this help message and exit"
    exit 0
}

function mean(data, n) {
    sum = 0
    for (i = 1; i <= n; i++) {
        sum += data[i]
    }
    return sum / n
}

function stddev(data, n) {
    m = mean(data, n)
    sum = 0
    for (i = 1; i <= n; i++) {
        sum += (data[i] - m)^2
    }
    return sqrt(sum / (n - 1))
}

function median(data, n) {
    asort(data)
    if (n % 2 == 0) {
        return (data[n/2] + data[n/2 + 1]) / 2
    } else {
        return data[(n + 1) / 2]
    }
}

function quantile(data, n, q) {
    asort(data)
    return data[int((n - 1) * q + 1)]
}

BEGIN {
    if (ARGC < 3 || ARGV[1] == "-h" || ARGV[1] == "--help") {
        print_help()
    }

    FS = ","
    file = ARGV[1]
    col = ARGV[2]

    n = 0
    while (getline < file) {
        n++
        data[n] = $col
    }

    num_cols = split($0, columns, FS)

    m = mean(data, n)
    sd = stddev(data, n)
    me = median(data, n)
    q1 = quantile(data, n, 0.25)
    q2 = quantile(data, n, 0.5)
    q3 = quantile(data, n, 0.75)
    iqr = q3 - q1

    print "Number of rows:", n, ","
    print "Number of columns:", num_cols, ","
    print "Mean:", m, ","
    print "Median:", me, ","
    print "Standard Deviation:", sd, ","
    print "Quantile 1 (25%):", q1, ","
    print "Quantile 2 (50%):", q2, ","
    print "Quantile 3 (75%):", q3, ","
    print "IQR:", iqr
}

